<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
  
  	<!-- 대시보드 - 첫번째 차트 -->
	<select id="selectChart1" parameterType="string" resultType="AdminDashboard1">
		SELECT SUBSTR(TO_CHAR(ODATE, 'YYYY/MM/DD'), 6, 2) AS MM, SUM(O.OCOUNT * P.PPRICE * 0.1) AS REVENUE
		    FROM "ORDER" O JOIN PRODUCT P ON O.PID = P.PID
		    WHERE SUBSTR(TO_CHAR(ODATE, 'YYYY/MM/DD'), 1, 4) = #{year}
		    GROUP BY SUBSTR(TO_CHAR(ODATE, 'YYYY/MM/DD'), 6, 2)
		    ORDER BY MM ASC
	</select>

  	<!-- 대시보드 - 두번째 차트 -->
	<select id="selectChart2" resultType="AdminDashboard2">
		SELECT CID, SUM(PSALES) AS SALES
		    FROM PRODUCT
		    GROUP BY CID
		    ORDER BY CID ASC
	</select>

 	<!-- 대시보드 - 세번째 차트 -->
	<select id="selectChart3" parameterType="string" resultType="AdminDashboard3">
		SELECT SUBSTR(TO_CHAR(ODATE, 'YYYY/MM/DD'), 6, 2) AS MM, COUNT(OID) AS CNT
		    FROM "ORDER"
		    WHERE SUBSTR(TO_CHAR(ODATE, 'YYYY/MM/DD'), 1, 4) = #{year}
		    GROUP BY SUBSTR(TO_CHAR(ODATE, 'YYYY/MM/DD'), 6, 2)
		    ORDER BY MM ASC
	</select>
	
  	<!-- 회원 -->
	<select id="selectMember" parameterType="map" resultType="AdminMember">
		SELECT M.PROFIMG, M.MID, M.MEMAIL, M.MNAME, 
		        (SELECT COUNT(*) FROM BOARD B WHERE B.MID = M.MID) AS POSTCNT, 
		        (SELECT COUNT(*) FROM REPLY R WHERE R.MID = M.MID) AS REPLYCNT, 
		        NVL((SELECT SUM(P.PPRICE * O.OCOUNT) FROM PRODUCT P JOIN "ORDER" O ON P.PID = O.PID WHERE O.MID = M.MID), 0) AS PAYMENT, 
		        TO_CHAR(M.MCREATE, 'YYYY.MM.DD') AS MCREATE
		    FROM MEMBER M 
		    WHERE M.MROLE = 'M' AND M.ENABLED = 1
		    <if test="searchword != null and !searchword.equals('')">
				AND MNAME LIKE '%'||#{searchword}||'%'
			</if>
			<choose>
				<when test="sort == 1"> <!-- 게시글수많은순 -->
					ORDER BY POSTCNT DESC, MID ASC
				</when>
				<when test="sort == 2"> <!-- 댓글수많은순 -->
					ORDER BY REPLYCNT DESC, MID ASC
				</when>
				<when test="sort == 3"> <!-- 총주문금액높은순 -->
					ORDER BY PAYMENT DESC, MID ASC
				</when>
				<otherwise>
					ORDER BY MID ASC
				</otherwise>
			</choose>
	</select>
	
	<!-- 상품목록 -->
  	<select id="selectProduct" parameterType="map" resultType="SellerProduct">
		SELECT P.PID, C.CNAME, P.PNAME, P.PIMAGE, TO_CHAR(P.PPRICE, '999,999,999') AS PRICECHAR, P.PPRICE AS PRICENUM, P.PSALES, P.PSTOCK, P.PLINK
    		FROM PRODUCT P JOIN CATEGORY C ON P.CID = C.CID
   			<where>
				<if test="searchword != null and !searchword.equals('')">
					AND P.PNAME LIKE '%'||#{searchword}||'%'
				</if>
				<if test="category != 0">
					AND P.CID = #{category}
				</if>
			</where>
			<choose>
				<when test="sort == 1">
					ORDER BY PRICENUM DESC, P.PID DESC
				</when>
				<when test="sort == 2">
					ORDER BY PRICENUM ASC, P.PID DESC
				</when>
				<when test="sort == 3">
					ORDER BY P.PSALES DESC, P.PID DESC
				</when>
				<when test="sort == 4">
					ORDER BY P.PSALES ASC, P.PID DESC
				</when>
				<when test="sort == 5">
					ORDER BY P.PSTOCK DESC, P.PID DESC
				</when>
				<when test="sort == 6">
					ORDER BY P.PSTOCK ASC, P.PID DESC
				</when>
				<otherwise>
					ORDER BY P.PID DESC
				</otherwise>
			</choose>
  	</select>
	
  	<!-- 게시물 -->
	<select id="selectBoard" parameterType="map" resultType="AdminBoard">
		SELECT B.BID, BC.BCNAME, B.BTITLE, B.MID, B.BVIEWCOUNT, 
		        TO_CHAR(B.BCREATE, 'YYYY.MM.DD') AS BCREATE, 
		        DECODE(B.BSTATE, 'A', '정상', '삭제') AS BSTATE
		    FROM BOARD B JOIN BCATEGORY BC ON B.BCID = BC.BCID
		    
			<where> <!-- WHERE을 구문 앞에 추가해줌. AND/OR로 시작한다면 없애줌 -->
				<if test="searchword != null and !searchword.equals('')">
					AND BTITLE LIKE '%'||#{searchword}||'%'
				</if>
				<choose>
					<when test="category == 1"> <!-- 공지사항 -->
						AND BC.BCID = 0
					</when>
					<when test="category == 2"> <!-- 식단 -->
						AND BC.BCID = 1
					</when>
					<when test="category == 3"> <!-- 팁&노하우 -->
						AND BC.BCID = 2
					</when>
					<when test="category == 4"> <!-- 고민&질문 -->
						AND BC.BCID = 3
					</when>
				</choose>
				<if test="state != null and !state.equals('')">
					<choose>
						<when test="state == 1"> <!-- 활성화 -->
							AND BSTATE = 'A'
						</when>
						<when test="state == 2"> <!-- 비활성화 -->
							AND BSTATE = 'D'
						</when>
					</choose>
				</if>
			</where>
			
		    ORDER BY B.BID DESC
	</select>
  	
  	<!-- 게시물 삭제 -->
  	<delete id="deleteBoard" parameterType="list">
		DELETE FROM BOARD
		    WHERE BID IN
		    <foreach item="bid" collection="list" open="(" separator="," close=")">
		        #{bid}
		    </foreach> 
		  	<!-- collection : 컬렉션의 이름. List나 Array형태만 가능 -->
		  	<!-- item : 전달받은 인자 값의 alias명. #{여기이름}과 동일 -->
  	</delete>
  
  	<!-- 신고댓글 -->
  	<select id="selectReport" parameterType="map" resultType="AdminReport">
		SELECT DECODE(RR.REPID, 0, '광고/상업성', 1, '비방/욕설', 2, '개인정보 유출', 3, '청소년 유해', 4, '명예훼손/저작권 침해', 5, '도배성', 6, '불명확/추측성') AS REASON,
		        R.RID, R.RCONTENT, R.MID AS POSTER, TO_CHAR(RR.RCREATE, 'YYYY.MM.DD HH24:MI:SS') AS RCREATE,
		        (SELECT COUNT(*) FROM RREPORT WHERE RID = R.RID) AS CNT, RR.MID AS REPORTER
		    FROM REPLY R JOIN RREPORT RR ON R.RID = RR.RID
		    <where> <!-- WHERE을 구문 앞에 추가해줌. AND/OR로 시작한다면 없애줌 -->
				<choose>
					<when test="reason == 1">
						AND RR.REPID = 0
					</when>
					<when test="reason == 2">
						AND RR.REPID = 1
					</when>
					<when test="reason == 3">
						AND RR.REPID = 2
					</when>
					<when test="reason == 4">
						AND RR.REPID = 3
					</when>
					<when test="reason == 5">
						AND RR.REPID = 4
					</when>
					<when test="reason == 6">
						AND RR.REPID = 5
					</when>
					<when test="reason == 6">
						AND RR.REPID = 6
					</when>
				</choose>
			</where>
			<choose>
				<when test="sort == 1">
					ORDER BY CNT DESC, RCREATE DESC
				</when>
				<when test="sort == 2">
					ORDER BY CNT ASC, RCREATE DESC
				</when>
				<when test="sort == 3">
					ORDER BY RCREATE DESC
				</when>
				<when test="sort == 4">
					ORDER BY RCREATE ASC
				</when>
				<otherwise>
					ORDER BY RCREATE DESC
				</otherwise>
			</choose>
  	</select>
  
  	<!-- 신고댓글 삭제 -->
    <delete id="deleteReply" parameterType="list">
		DELETE FROM REPLY
		    WHERE RID IN
		    <foreach item="rid" collection="list" open="(" separator="," close=")">
		        #{rid}
		    </foreach> 
  	</delete>
  
  	<!-- 신고 취소 -->
    <delete id="deleteReport" parameterType="map">
	    DELETE FROM RREPORT
		    WHERE (RID, MID) IN
		    <foreach item="rid" collection="ridList" index="index" separator=",">
				(#{rid}, #{reporterList[#{index}]})
			</foreach>
		    <!-- WHERE (RID, MID) IN (('3','7'), ('1','3')) -> 다중 컬럼 IN 사용 -->
		    <!-- 위 코드에서는 'map.ridList'를 순회하면서 각각의 'rid' 값을 가져와 SQL문의 IN 절에 적용. 
		    	이때, 'reporterList' 값도 같은 인덱스 위치에 있는 값과 함께 사용하기 위해 'index' 값을 추가적으로 선언 -->
  	</delete>
  
  
  
  
  
</mapper>
